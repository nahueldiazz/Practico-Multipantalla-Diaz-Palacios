{"ast":null,"code":"import * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\n\nfunction normalizeScrollEvent(e) {\n  return {\n    nativeEvent: {\n      contentOffset: {\n        get x() {\n          return e.target.scrollLeft;\n        },\n\n        get y() {\n          return e.target.scrollTop;\n        }\n\n      },\n      contentSize: {\n        get height() {\n          return e.target.scrollHeight;\n        },\n\n        get width() {\n          return e.target.scrollWidth;\n        }\n\n      },\n      layoutMeasurement: {\n        get height() {\n          return e.target.offsetHeight;\n        },\n\n        get width() {\n          return e.target.offsetWidth;\n        }\n\n      }\n    },\n    timeStamp: Date.now()\n  };\n}\n\nfunction shouldEmitScrollEvent(lastTick, eventThrottle) {\n  var timeSinceLastTick = Date.now() - lastTick;\n  return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n}\n\nvar ScrollViewBase = forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      accessibilityRole = props.accessibilityRole,\n      accessibilityState = props.accessibilityState,\n      children = props.children,\n      importantForAccessibility = props.importantForAccessibility,\n      nativeID = props.nativeID,\n      onLayout = props.onLayout,\n      onScroll = props.onScroll,\n      onTouchMove = props.onTouchMove,\n      onWheel = props.onWheel,\n      pointerEvents = props.pointerEvents,\n      _props$scrollEnabled = props.scrollEnabled,\n      scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n      _props$scrollEventThr = props.scrollEventThrottle,\n      scrollEventThrottle = _props$scrollEventThr === void 0 ? 0 : _props$scrollEventThr,\n      showsHorizontalScrollIndicator = props.showsHorizontalScrollIndicator,\n      showsVerticalScrollIndicator = props.showsVerticalScrollIndicator,\n      style = props.style,\n      dataSet = props.dataSet,\n      testID = props.testID;\n  var scrollState = useRef({\n    isScrolling: false,\n    scrollLastTick: 0\n  });\n  var scrollTimeout = useRef(null);\n\n  function createPreventableScrollHandler(handler) {\n    return function (e) {\n      if (scrollEnabled) {\n        if (handler) {\n          handler(e);\n        }\n      }\n    };\n  }\n\n  function handleScroll(e) {\n    e.persist();\n    e.stopPropagation();\n\n    if (scrollTimeout.current != null) {\n      clearTimeout(scrollTimeout.current);\n    }\n\n    scrollTimeout.current = setTimeout(function () {\n      handleScrollEnd(e);\n    }, 100);\n\n    if (scrollState.current.isScrolling) {\n      if (shouldEmitScrollEvent(scrollState.current.scrollLastTick, scrollEventThrottle)) {\n        handleScrollTick(e);\n      }\n    } else {\n      handleScrollStart(e);\n    }\n  }\n\n  function handleScrollStart(e) {\n    scrollState.current.isScrolling = true;\n    scrollState.current.scrollLastTick = Date.now();\n  }\n\n  function handleScrollTick(e) {\n    scrollState.current.scrollLastTick = Date.now();\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n\n  function handleScrollEnd(e) {\n    scrollState.current.isScrolling = false;\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n\n  var hideScrollbar = showsHorizontalScrollIndicator === false || showsVerticalScrollIndicator === false;\n  return React.createElement(View, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: accessibilityRole,\n    accessibilityState: accessibilityState,\n    children: children,\n    dataSet: dataSet,\n    importantForAccessibility: importantForAccessibility,\n    nativeID: nativeID,\n    onLayout: onLayout,\n    onScroll: handleScroll,\n    onTouchMove: createPreventableScrollHandler(onTouchMove),\n    onWheel: createPreventableScrollHandler(onWheel),\n    pointerEvents: pointerEvents,\n    ref: forwardedRef,\n    style: [style, !scrollEnabled && styles.scrollDisabled, hideScrollbar && styles.hideScrollbar],\n    testID: testID\n  });\n});\nvar styles = StyleSheet.create({\n  scrollDisabled: {\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    touchAction: 'none'\n  },\n  hideScrollbar: {\n    scrollbarWidth: 'none'\n  }\n});\nexport default ScrollViewBase;","map":{"version":3,"names":["React","forwardRef","useRef","StyleSheet","View","normalizeScrollEvent","e","nativeEvent","contentOffset","x","target","scrollLeft","y","scrollTop","contentSize","height","scrollHeight","width","scrollWidth","layoutMeasurement","offsetHeight","offsetWidth","timeStamp","Date","now","shouldEmitScrollEvent","lastTick","eventThrottle","timeSinceLastTick","ScrollViewBase","props","forwardedRef","accessibilityLabel","accessibilityRole","accessibilityState","children","importantForAccessibility","nativeID","onLayout","onScroll","onTouchMove","onWheel","pointerEvents","_props$scrollEnabled","scrollEnabled","_props$scrollEventThr","scrollEventThrottle","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","style","dataSet","testID","scrollState","isScrolling","scrollLastTick","scrollTimeout","createPreventableScrollHandler","handler","handleScroll","persist","stopPropagation","current","clearTimeout","setTimeout","handleScrollEnd","handleScrollTick","handleScrollStart","hideScrollbar","createElement","ref","styles","scrollDisabled","create","overflowX","overflowY","touchAction","scrollbarWidth"],"sources":["C:/Users/priip/OneDrive/Escritorio/Practico/Practico-Multipantalla-Diaz-Palacios/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport * as React from 'react';\r\nimport { forwardRef, useRef } from 'react';\r\nimport StyleSheet from '../StyleSheet';\r\nimport View from '../View';\r\n\r\nfunction normalizeScrollEvent(e) {\r\n  return {\r\n    nativeEvent: {\r\n      contentOffset: {\r\n        get x() {\r\n          return e.target.scrollLeft;\r\n        },\r\n\r\n        get y() {\r\n          return e.target.scrollTop;\r\n        }\r\n\r\n      },\r\n      contentSize: {\r\n        get height() {\r\n          return e.target.scrollHeight;\r\n        },\r\n\r\n        get width() {\r\n          return e.target.scrollWidth;\r\n        }\r\n\r\n      },\r\n      layoutMeasurement: {\r\n        get height() {\r\n          return e.target.offsetHeight;\r\n        },\r\n\r\n        get width() {\r\n          return e.target.offsetWidth;\r\n        }\r\n\r\n      }\r\n    },\r\n    timeStamp: Date.now()\r\n  };\r\n}\r\n\r\nfunction shouldEmitScrollEvent(lastTick, eventThrottle) {\r\n  var timeSinceLastTick = Date.now() - lastTick;\r\n  return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\r\n}\r\n/**\r\n * Encapsulates the Web-specific scroll throttling and disabling logic\r\n */\r\n\r\n\r\nvar ScrollViewBase = forwardRef(function (props, forwardedRef) {\r\n  var accessibilityLabel = props.accessibilityLabel,\r\n      accessibilityRole = props.accessibilityRole,\r\n      accessibilityState = props.accessibilityState,\r\n      children = props.children,\r\n      importantForAccessibility = props.importantForAccessibility,\r\n      nativeID = props.nativeID,\r\n      onLayout = props.onLayout,\r\n      onScroll = props.onScroll,\r\n      onTouchMove = props.onTouchMove,\r\n      onWheel = props.onWheel,\r\n      pointerEvents = props.pointerEvents,\r\n      _props$scrollEnabled = props.scrollEnabled,\r\n      scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\r\n      _props$scrollEventThr = props.scrollEventThrottle,\r\n      scrollEventThrottle = _props$scrollEventThr === void 0 ? 0 : _props$scrollEventThr,\r\n      showsHorizontalScrollIndicator = props.showsHorizontalScrollIndicator,\r\n      showsVerticalScrollIndicator = props.showsVerticalScrollIndicator,\r\n      style = props.style,\r\n      dataSet = props.dataSet,\r\n      testID = props.testID;\r\n  var scrollState = useRef({\r\n    isScrolling: false,\r\n    scrollLastTick: 0\r\n  });\r\n  var scrollTimeout = useRef(null);\r\n\r\n  function createPreventableScrollHandler(handler) {\r\n    return function (e) {\r\n      if (scrollEnabled) {\r\n        if (handler) {\r\n          handler(e);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  function handleScroll(e) {\r\n    e.persist();\r\n    e.stopPropagation(); // A scroll happened, so the scroll resets the scrollend timeout.\r\n\r\n    if (scrollTimeout.current != null) {\r\n      clearTimeout(scrollTimeout.current);\r\n    }\r\n\r\n    scrollTimeout.current = setTimeout(function () {\r\n      handleScrollEnd(e);\r\n    }, 100);\r\n\r\n    if (scrollState.current.isScrolling) {\r\n      // Scroll last tick may have changed, check if we need to notify\r\n      if (shouldEmitScrollEvent(scrollState.current.scrollLastTick, scrollEventThrottle)) {\r\n        handleScrollTick(e);\r\n      }\r\n    } else {\r\n      // Weren't scrolling, so we must have just started\r\n      handleScrollStart(e);\r\n    }\r\n  }\r\n\r\n  function handleScrollStart(e) {\r\n    scrollState.current.isScrolling = true;\r\n    scrollState.current.scrollLastTick = Date.now();\r\n  }\r\n\r\n  function handleScrollTick(e) {\r\n    scrollState.current.scrollLastTick = Date.now();\r\n\r\n    if (onScroll) {\r\n      onScroll(normalizeScrollEvent(e));\r\n    }\r\n  }\r\n\r\n  function handleScrollEnd(e) {\r\n    scrollState.current.isScrolling = false;\r\n\r\n    if (onScroll) {\r\n      onScroll(normalizeScrollEvent(e));\r\n    }\r\n  }\r\n\r\n  var hideScrollbar = showsHorizontalScrollIndicator === false || showsVerticalScrollIndicator === false;\r\n  return React.createElement(View, {\r\n    accessibilityLabel: accessibilityLabel,\r\n    accessibilityRole: accessibilityRole,\r\n    accessibilityState: accessibilityState,\r\n    children: children,\r\n    dataSet: dataSet,\r\n    importantForAccessibility: importantForAccessibility,\r\n    nativeID: nativeID,\r\n    onLayout: onLayout,\r\n    onScroll: handleScroll,\r\n    onTouchMove: createPreventableScrollHandler(onTouchMove),\r\n    onWheel: createPreventableScrollHandler(onWheel),\r\n    pointerEvents: pointerEvents,\r\n    ref: forwardedRef,\r\n    style: [style, !scrollEnabled && styles.scrollDisabled, hideScrollbar && styles.hideScrollbar],\r\n    testID: testID\r\n  });\r\n}); // Chrome doesn't support e.preventDefault in this case; touch-action must be\r\n// used to disable scrolling.\r\n// https://developers.google.com/web/updates/2017/01/scrolling-intervention\r\n\r\nvar styles = StyleSheet.create({\r\n  scrollDisabled: {\r\n    overflowX: 'hidden',\r\n    overflowY: 'hidden',\r\n    touchAction: 'none'\r\n  },\r\n  hideScrollbar: {\r\n    scrollbarWidth: 'none'\r\n  }\r\n});\r\nexport default ScrollViewBase;"],"mappings":"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"},"metadata":{},"sourceType":"module"}